<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jk.dao.MemberMapper" >
  <resultMap id="BaseResultMap" type="com.jk.model.Member" >
    <id column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="member_name" property="memberName" jdbcType="VARCHAR" />
    <result column="member_sex" property="memberSex" jdbcType="INTEGER" />
    <result column="member_age" property="memberAge" jdbcType="INTEGER" />
    <result column="member_birthday" property="memberBirthday" jdbcType="DATE" />
    <result column="member_phone" property="memberPhone" jdbcType="VARCHAR" />
    <result column="member_level" property="memberLevel" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    member_id, member_name, member_sex, member_age, member_birthday, member_phone, member_level
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jk.model.Member" >
    insert into t_member (member_id, member_name, member_sex, 
      member_age, member_birthday, member_phone, 
      member_level)
    values (#{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{memberSex,jdbcType=INTEGER}, 
      #{memberAge,jdbcType=INTEGER}, #{memberBirthday,jdbcType=DATE}, #{memberPhone,jdbcType=VARCHAR}, 
      #{memberLevel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jk.model.Member" >
    insert into t_member
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="memberName != null" >
        member_name,
      </if>
      <if test="memberSex != null" >
        member_sex,
      </if>
      <if test="memberAge != null" >
        member_age,
      </if>
      <if test="memberBirthday != null" >
        member_birthday,
      </if>
      <if test="memberPhone != null" >
        member_phone,
      </if>
      <if test="memberLevel != null" >
        member_level,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="memberName != null" >
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        #{memberSex,jdbcType=INTEGER},
      </if>
      <if test="memberAge != null" >
        #{memberAge,jdbcType=INTEGER},
      </if>
      <if test="memberBirthday != null" >
        #{memberBirthday,jdbcType=DATE},
      </if>
      <if test="memberPhone != null" >
        #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null" >
        #{memberLevel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jk.model.Member" >
    update t_member
    <set >
      <if test="memberName != null" >
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null" >
        member_sex = #{memberSex,jdbcType=INTEGER},
      </if>
      <if test="memberAge != null" >
        member_age = #{memberAge,jdbcType=INTEGER},
      </if>
      <if test="memberBirthday != null" >
        member_birthday = #{memberBirthday,jdbcType=DATE},
      </if>
      <if test="memberPhone != null" >
        member_phone = #{memberPhone,jdbcType=VARCHAR},
      </if>
      <if test="memberLevel != null" >
        member_level = #{memberLevel,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jk.model.Member" >
    update t_member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=INTEGER},
      member_age = #{memberAge,jdbcType=INTEGER},
      member_birthday = #{memberBirthday,jdbcType=DATE},
      member_phone = #{memberPhone,jdbcType=VARCHAR},
      member_level = #{memberLevel,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
</mapper>